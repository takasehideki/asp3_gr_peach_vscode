# -*- coding: utf-8 -*-
#
#   TOPPERS/ASP Kernel
#       Toyohashi Open Platform for Embedded Real-Time Systems/
#       Advanced Standard Profile Kernel
# 
#   Copyright (C) 2015 by FUJI SOFT INCORPORATED, JAPAN
#   Copyright (C) 2015,2016 by Embedded and Real-Time Systems Laboratory
#               Graduate School of Information Science, Nagoya Univ., JAPAN
# 
#   上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#   ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#   変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#   (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#       権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#       スコード中に含まれていること．
#   (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#       用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#       者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#       の無保証規定を掲載すること．
#   (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#       用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#       と．
#     (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#         作権表示，この利用条件および下記の無保証規定を掲載すること．
#     (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#         報告すること．
#   (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#       害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#       また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#       由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#       免責すること．
# 
#   本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#   よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#   に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#   アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#   の責任を負わない．
# 
#   $Id: core_kernel.trb 662 2016-02-27 02:33:51Z ertl-hiro $
# 

#
#		パス2の生成スクリプトのコア依存部（ARM用）
#

#
#  有効なCPU例外ハンドラ番号
#
$EXCNO_VALID = [ 0, 1, 2, 3, 4, 5 ]

#
#  DEF_EXCで使用できるCPU例外ハンドラ番号
#
$EXCNO_DEFEXC_VALID = [ 0, 1, 2, 3, 5 ]

#
#  ターゲット非依存部のインクルード
#
IncludeTrb("kernel/kernel.trb")

#
#  割込みハンドラテーブル
#
$kernelCfgC.comment_header("Interrupt Handler Table")

$kernelCfgC.add("const FP _kernel_inh_table[TNUM_INHNO] = {")
$INHNO_VALID.each_with_index do |inhnoVal, index|
  $kernelCfgC.add(",") if index > 0
  $kernelCfgC.append("\t/* 0x#{sprintf("%03x", inhnoVal)} */ ")
  if $cfgData[:DEF_INH].has_key?(inhnoVal)
    $kernelCfgC.append("(FP)(#{$cfgData[:DEF_INH][inhnoVal][:inthdr]})")
  else
    $kernelCfgC.append("(FP)(_kernel_default_int_handler)")
  end
end
$kernelCfgC.add
$kernelCfgC.add2("};")

#
#  割込み要求ライン設定テーブル
#
if $USE_INTCFG_TABLE
  $kernelCfgC.comment_header("Interrupt Configuration Table")

  $kernelCfgC.add("const uint8_t _kernel_intcfg_table[TNUM_INTNO] = {")
  $INTNO_VALID.each_with_index do |intnoVal, index|
    $kernelCfgC.add(",") if index > 0
    $kernelCfgC.append("\t/* 0x#{sprintf("%03x", intnoVal)} */ ")
    if $cfgData[:CFG_INT].has_key?(intnoVal)
      $kernelCfgC.append("1U")
    else
      $kernelCfgC.append("0U")
    end
  end
  $kernelCfgC.add
  $kernelCfgC.add2("};")
end

#
#  CPU例外ハンドラテーブル
#
$kernelCfgC.comment_header("CPU Exception Handler Table")

$kernelCfgC.add("const FP _kernel_exc_table[TNUM_EXCNO] = {")
$EXCNO_VALID.each_with_index do |excnoVal, index|
  $kernelCfgC.add(",") if index > 0
  $kernelCfgC.append("\t/* #{excnoVal} */ ")
  if $cfgData[:DEF_EXC].has_key?(excnoVal)
    $kernelCfgC.append("(FP)(#{$cfgData[:DEF_EXC][excnoVal][:exchdr]})")
  else
    $kernelCfgC.append("(FP)(_kernel_default_exc_handler)")
  end
end
$kernelCfgC.add
$kernelCfgC.add2("};")
